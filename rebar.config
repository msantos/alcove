{port_env, [
        {"EXE_LDFLAGS", "$ALCOVE_LDFLAGS -lpthread $EXE_LDFLAGS"},
        {"EXE_CFLAGS", "$EXE_CFLAGS $ALCOVE_CFLAGS"}
        ]}.

{port_specs, [
    {"priv/alcove", [
        "c_src/alcove.c",
        "c_src/alcove_call.c",

        "c_src/alcove_cred.c",
        "c_src/alcove_dir.c",
        "c_src/alcove_env.c",
        "c_src/alcove_exec.c",
        "c_src/alcove_fork.c",
        "c_src/alcove_limit.c",
        "c_src/alcove_mount.c",
        "c_src/alcove_proc.c",
        "c_src/alcove_signal.c",
        "c_src/alcove_utsname.c",

        "c_src/alcove_term.c",
        "c_src/erl_posix_str.c"
    ]}
]}.

{pre_hooks, [
    {compile, "bin/alcove_version.escript c_src/alcove_version.h"},
    {compile, "bin/alcove_calls.sh c_src/alcove_call.proto > c_src/alcove_calls.h"},
    {compile, "bin/alcove_call.sh c_src/alcove_call.proto > c_src/alcove_call.h"},
    {compile, "bin/alcove.escript src/alcove.erl c_src/alcove_call.proto"}
]}.

{clean_files, [
    "c_src/alcove_call.h",
    "c_src/alcove_calls.h",
    "c_src/alcove_version.h",
    "src/alcove.erl"
]}.

{xref_checks, [undefined_function_calls]}.
{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "."}]}}]}.
