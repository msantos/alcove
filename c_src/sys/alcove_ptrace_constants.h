/* Copyright (c) 2016, Michael Santos <michael.santos@gmail.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

static const alcove_constant_t alcove_ptrace_constants[] = {
#ifdef PTRACE_TRACEME
    ALCOVE_CONSTANT(PTRACE_TRACEME),
#endif
#ifdef PTRACE_PEEKTEXT
    ALCOVE_CONSTANT(PTRACE_PEEKTEXT),
#endif
#ifdef PTRACE_PEEKDATA
    ALCOVE_CONSTANT(PTRACE_PEEKDATA),
#endif
#ifdef PTRACE_PEEKUSR
    ALCOVE_CONSTANT(PTRACE_PEEKUSR),
#endif
#ifdef PTRACE_POKETEXT
    ALCOVE_CONSTANT(PTRACE_POKETEXT),
#endif
#ifdef PTRACE_POKEDATA
    ALCOVE_CONSTANT(PTRACE_POKEDATA),
#endif
#ifdef PTRACE_POKEUSR
    ALCOVE_CONSTANT(PTRACE_POKEUSR),
#endif
#ifdef PTRACE_CONT
    ALCOVE_CONSTANT(PTRACE_CONT),
#endif
#ifdef PTRACE_KILL
    ALCOVE_CONSTANT(PTRACE_KILL),
#endif
#ifdef PTRACE_SINGLESTEP
    ALCOVE_CONSTANT(PTRACE_SINGLESTEP),
#endif
#ifdef PTRACE_ATTACH
    ALCOVE_CONSTANT(PTRACE_ATTACH),
#endif
#ifdef PTRACE_DETACH
    ALCOVE_CONSTANT(PTRACE_DETACH),
#endif
#ifdef PTRACE_SYSCALL
    ALCOVE_CONSTANT(PTRACE_SYSCALL),
#endif
#ifdef PTRACE_SETOPTIONS
    ALCOVE_CONSTANT(PTRACE_SETOPTIONS),
#endif
#ifdef PTRACE_GETEVENTMSG
    ALCOVE_CONSTANT(PTRACE_GETEVENTMSG),
#endif
#ifdef PTRACE_GETSIGINFO
    ALCOVE_CONSTANT(PTRACE_GETSIGINFO),
#endif
#ifdef PTRACE_SETSIGINFO
    ALCOVE_CONSTANT(PTRACE_SETSIGINFO),
#endif
#ifdef PTRACE_GETREGSET
    ALCOVE_CONSTANT(PTRACE_GETREGSET),
#endif
#ifdef PTRACE_SETREGSET
    ALCOVE_CONSTANT(PTRACE_SETREGSET),
#endif
#ifdef PTRACE_SEIZE
    ALCOVE_CONSTANT(PTRACE_SEIZE),
#endif
#ifdef PTRACE_INTERRUPT
    ALCOVE_CONSTANT(PTRACE_INTERRUPT),
#endif
#ifdef PTRACE_LISTEN
    ALCOVE_CONSTANT(PTRACE_LISTEN),
#endif
#ifdef PTRACE_PEEKSIGINFO
    ALCOVE_CONSTANT(PTRACE_PEEKSIGINFO),
#endif
#ifdef PTRACE_GETSIGMASK
    ALCOVE_CONSTANT(PTRACE_GETSIGMASK),
#endif
#ifdef PTRACE_SETSIGMASK
    ALCOVE_CONSTANT(PTRACE_SETSIGMASK),
#endif
#ifdef PTRACE_PEEKSIGINFO_SHARED
    ALCOVE_CONSTANT(PTRACE_PEEKSIGINFO_SHARED),
#endif
#ifdef PTRACE_EVENT_FORK
    ALCOVE_CONSTANT(PTRACE_EVENT_FORK),
#endif
#ifdef PTRACE_EVENT_VFORK
    ALCOVE_CONSTANT(PTRACE_EVENT_VFORK),
#endif
#ifdef PTRACE_EVENT_CLONE
    ALCOVE_CONSTANT(PTRACE_EVENT_CLONE),
#endif
#ifdef PTRACE_EVENT_EXEC
    ALCOVE_CONSTANT(PTRACE_EVENT_EXEC),
#endif
#ifdef PTRACE_EVENT_VFORK_DONE
    ALCOVE_CONSTANT(PTRACE_EVENT_VFORK_DONE),
#endif
#ifdef PTRACE_EVENT_EXIT
    ALCOVE_CONSTANT(PTRACE_EVENT_EXIT),
#endif
#ifdef PTRACE_EVENT_SECCOMP
    ALCOVE_CONSTANT(PTRACE_EVENT_SECCOMP),
#endif
#ifdef PTRACE_EVENT_STOP
    ALCOVE_CONSTANT(PTRACE_EVENT_STOP),
#endif
#ifdef PTRACE_O_TRACESYSGOOD
    ALCOVE_CONSTANT(PTRACE_O_TRACESYSGOOD),
#endif
#ifdef PTRACE_O_TRACEFORK
    ALCOVE_CONSTANT(PTRACE_O_TRACEFORK),
#endif
#ifdef PTRACE_O_TRACEVFORK
    ALCOVE_CONSTANT(PTRACE_O_TRACEVFORK),
#endif
#ifdef PTRACE_O_TRACECLONE
    ALCOVE_CONSTANT(PTRACE_O_TRACECLONE),
#endif
#ifdef PTRACE_O_TRACEEXEC
    ALCOVE_CONSTANT(PTRACE_O_TRACEEXEC),
#endif
#ifdef PTRACE_O_TRACEVFORKDONE
    ALCOVE_CONSTANT(PTRACE_O_TRACEVFORKDONE),
#endif
#ifdef PTRACE_O_TRACEEXIT
    ALCOVE_CONSTANT(PTRACE_O_TRACEEXIT),
#endif
#ifdef PTRACE_O_TRACESECCOMP
    ALCOVE_CONSTANT(PTRACE_O_TRACESECCOMP),
#endif
#ifdef PTRACE_O_EXITKILL
    ALCOVE_CONSTANT(PTRACE_O_EXITKILL),
#endif
#ifdef PTRACE_O_MASK
    ALCOVE_CONSTANT(PTRACE_O_MASK),
#endif

    {NULL, 0}};
